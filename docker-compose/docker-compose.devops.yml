version: '3.2'

services:
  zipkin-server:
    image: openzipkin/zipkin
    container_name: sc-zipkin-server
    restart: always
    volumes:
      - ../data/zipkin-server/logs:/var/logs
    networks:
      - sc-net
    ports:
      - 9411:9411
    environment:
      - RABBIT_ADDRESSES=rabbitmq:5672
      - RABBIT_MQ_PORT=5672
      - RABBIT_PASSWORD=guest
      - RABBIT_USER=guest
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=http://elasticsearch:9200
    depends_on:
      - rabbitmq

  elasticsearch:
    build:
      context: ./devops/elk/elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: sc-elasticsearch
    restart: always
    volumes:
      - type: bind
        source: ./devops/elk/elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      # ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - sc-net

  skywalking-oap:
    image: apache/skywalking-oap-server:7.0.0-es7
    container_name: skywalking-oap
    networks:
      - sc-net
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    restart: always
    ports:
      - 11800:11800
      - 12800:12800
    volumes:
      - ./devops/skywalking/config:/apache-skywalking-apm-bin/config:ro

  skywalking-ui:
    image: apache/skywalking-ui:7.0.0
    container_name: skywalking-ui
    networks:
      - sc-net
    depends_on:
      - skywalking-oap
    links:
      - skywalking-oap
    restart: always
    ports:
      - 8080:8080
    environment:
      collector.ribbon.listOfServers: skywalking-oap:12800

  grafana:
    image: grafana/grafana
    container_name: sc-grafana
    restart: always
    volumes:
      - ../data/grafana/logs:/var/logs/grafana
    networks:
      - sc-net
    ports:
      - 3000:3000

  logstash:
    build:
      context: ./devops/elk/logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: sc-logstash
    restart: always
    volumes:
      - type: bind
        source: ./devops/elk/logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./devops/elk/logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - sc-net
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: ./devops/elk/kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: sc-kibana
    restart: always
    volumes:
      - type: bind
        source: ./devops/elk/kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - sc-net
    depends_on:
      - elasticsearch

volumes:
  elasticsearch:
